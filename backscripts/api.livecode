script "API"
--> Metadata
-
/*
This is the original API stack.
We have moved the "Web Browser API" section into it's own library.

This library is currenlty used as a backscript.
AFAIK this is unecessary and should be moved into the libraries folder where it will automatically be loaded as a conventional library.
*/


--> Navigation
-
command goHome
   -- log_Info _goLaunchModule ..."
   -- put getConfiguration ("launch_module") into homeModule
   module_Go "home"
end goHome

command loadModule pModule
   log_Info "Loading module:" && pModule
   -- module_LoadConfiguration pModule
   module_Go pModule
end loadModule

command module_Go pModule
   put sivasiva_GetModuleStackPath (pModule) into moduleStackPath
   
   log_Info ("Go to stack" && there is a stack moduleStackPath)
   
   put the short name of this stack into tOrigStack --jg: this avoids screen flashes
   go stack moduleStackPath in a new window
   if the environment is "development" then return moduleStackPath
   
   if the filename of stack tOrigStack <> moduleStackPath then
      close stack tOrigStack --jg: close orig stack after new one is in front
   end if
   return moduleStackPath
end module_Go

command module_LoadConfiguration pModule
   -- put (getPathToModulesFolder() & pModule & "/" & pModule & ".json") into moduleJsonFile
   put sivasiva_GetModuleJsonFile (pModule) into moduleJsonFile
   
   // check and load configuration
   if there is a file moduleJsonFile then
      get url ("binfile:" & moduleJsonFile)
      loadModuleConfiguration pModule, jsonImport(it)
      log_Info "loadModuleConfiguration"
   end if
end module_LoadConfiguration


--> Events
-
on backKey --jg: for Android; otherwise goes to loader screen  --### jg: not right yet
   -- msg is only sent on mobile
   -- recentcards isn't stable, try this way:
   get the recentcards
   filter it without "*loader.livecode*"
   filter it without the long id of this cd
   if line 1 of it = "" then
      quit
   else
      EXIT BACKKEY -- block for now until it's fixed
      go (line 1 of it)  --### NEED TO LOAD MODULE
   end if
end backKey


--> Init
-
command initializeInterfaceDefaults pOrientation -- mobile orientation setup
   /*
   Currently sent in viewer preOpenStack and currenlty by all "portal" stack cards and the hap media viewers (browser) stacks.
   Possibly better to initialisations scripts at the card layer (as a behavior)
   */
   
   if the environment is "mobile" then 
      set the fullscreenmode of this stack to "showAll" -- better for wider screens
      if pOrientation ="portrait" then
         mobileSetAllowedOrientations "portrait,portrait upside down" -- lock to both portrait orientations
      else
         mobileSetAllowedOrientations "landscape left,landscape right" -- lock to both landscape orientations
      end if
   end if
end initializeInterfaceDefaults


--> Display
-
/*
Based on an open source script by Scott Rossi:
*/

on showCustomMsg pShow,pMsg,pLoc,pWidth,pHeight
  -- pShow = boolean, show or hide msg grp
  -- pLoc = cd loc for display placement; defaults to 1/4 up from bottom center
  -- pMsg = text to display, defaults to "Getting files"; room for only a couple of words
  set the defaultstack to the topstack
  if pShow <> false then -- show it
    if pMsg = "" then
      answer "No prompt passed" -- or we could use a default message here
      exit showCustomMsg
    end if
    if pLoc = "" then
      put the height of this cd into tV -- calcs lower quarter
      put tV - (tV div 4) into tV
      put (item 1 of the loc of this cd),tV into pLoc
    end if
    buildMsgDisplay pLoc,pMsg,pWidth,pHeight
  else -- clear all
    if there is a fld "alphaDisplayFld" then
      repeat until there is no fld "alphaDisplayFld"
        delete fld "alphaDisplayFld"
      end repeat
    end if
    if there is a grc "alphabkgnd" then
      repeat until there is no grc "alphabkgnd"
        delete grc "alphabkgnd"
      end repeat
    end if
  end if
end showCustomMsg

on buildMsgDisplay pLoc,pTxt,pWidth,pHeight -- revised from Scott Rossi's open source
   -- pLoc = loc for display
   -- pTxt = text string to display; must be fairly short
   try
      set the name of the templateGraphic to "alphabkgnd"
      set the backColor of the templateGraphic to black
      set the lineSize of the templateGraphic to 0
      set the style of the templateGraphic to roundrect
      set the opaque of the templateGraphic to true
      set the width of the templateGraphic to pWidth -- 250 
      set the height of the templateGraphic to pHeight -- 50
      set the blendLevel of the templateGraphic to 50
      set the loc of the templateGraphic to pLoc
      create grc
      reset the templateGraphic
      set the name of the templateField to "alphaDisplayFld"
      set the borderWidth of the templateField to 0
      set the opaque of the templateField to false
      set the traversalOn of the templateField to false
      set the locktext of the templateField to true
      set the autohilite of the templateField to false
      set the textFont of the templateField to "verdana"
      set the textSize of the templateField to 24
      set the textheight of the templateField to 36
      set the textColor of the templateField to white
      set the textAlign of the templateField to center
      set the text of the templateField to pTxt
      set the width of the templateField to pWidth -- 250
      set the height of the templateField to pHeight-4 -- 46
      set the loc of the templateField to pLoc
      
      create fld
      reset the templateField
   catch tErr
      put "Result:" && the result && "Error:" && tErr
      --    log tErr
   end try
end buildMsgDisplay


script "behavior_view_SivaSivaBrowser"local sMediaURL, sCardRect,sBrowserURLlocal sPortraitRect, sLandscapeRect, sScreenRectlocal  sHackDownloadCompleteFlag# this stack intend to make the UI responsive# by getting rect of the screen and using those coordinator# to set the stack size and UI size.# setBrowserURL  # is sent from portal_GoURL in the lib_SivaSivaPortal on preopencard    hide widget "Body"    hide widget "loader"   --   set the url of widget "Body" to emptyend preopencardon opencard   setCardCoords # always needed for the Lib_UIhandler to work   # need to not run handlers from load card   # also we don't want journal_AddEntry to run    # loading the loader/wait-for-it "loader" browse   resetUI   send "updateUI" to this card in 20 millisecondsend opencardcommand setBrowserURL pURL   setJournalFlag (0)   set the url of widget "body" of cd "SivaSivaBrowser" to pURL   if isMobile() then         mobileSetAllowedOrientations "portrait,landscape left,landscape right"   end ifend setBrowserURLon resizeStack x,y   updateUI x,yend resizeStackcommand updateUI  x,y   --breakpoint    ntInfo ("Reached updateUI" && x&&y)   put the long id of widget "body" of card "SivaSivaBrowser" into tBrowser   put the long id of widget "loader" of card "SivaSivaBrowser" into tLoader      if x is empty then      put the rect of card "SivaSivaBrowser" into sCardRect      ntInfo ("updateUI card rect: " && sCardRect)        put item 3 of sCardRect into tWidth      put item 4 of sCardRect  into tHeight   else      put x into tWidth      put y into tHeight   end if   if tHeight > tWidth then       put  "true" into tPortraitMode   else      put "false" into tPortraitMode   end if   if tPortraitMode then            put the loc of card "SivaSivaBrowser"into tCardLoc      put (0,0,tWidth,(tHeight - 50)) into tBrowserRect      set the rect of tBrowser  to tBrowserRect      set the rect of tLoader to tBrowserRect      set loc group "footer" of card "SivaSivaBrowser" to ( round(tWidth/2),tHeight - 25)      put tWidth/4 into tUnit      set the loc of widget "go-home-portal" of card "SivaSivaBrowser" to (tUnit/2,tHeight-25)      set the loc of widget "add-favorites" of card "SivaSivaBrowser" to (tUnit*1.5,tHeight-25)      set the loc of widget "share"  of card "SivaSivaBrowser" to (tUnit*2.5,tHeight-25)      set the loc of widget "settings-gear" of card "SivaSivaBrowser" to (tUnit*3.5,tHeight-25)      show group "footer" of card "SivaSivaBrowser"   else      put the loc of card "SivaSivaBrowser"into tCardLoc      hide group "footer" of card "SivaSivaBrowser"      put (0,0,tWidth,tHeight) into tBrowserRect      set the rect of tBrowser  to tBrowserRect      set the rect of tLoader to tBrowserRect      put the loc of tBrowser into tCardLoc      put the loc of tLoader into tCardLoc   end if   end updateUIcommand terminateBrowser   if not (the vis of widget "loader") then      journal_AddEntry   end if   --   hide widget "Body"   --   hide widget "loader"   --   set the url of widget "Body" to emptyend terminateBrowserLocal sStartLoadTime,sTimePassed,sLoadSuccessFlag,# BUG iOS does not respond to message  "browserDocumentLoadBegin"# the loading Spinner and cancel command remain on screen.# it works on Android and desktop. This is needed in case the URL does load# and the user wants to break/leave the connection.# the "hack" is to add it the browserDocumentLoadComplete# this means is take a second so longer to appear on ios# than on Android# An Android we have a separate issue. # browserDocumentLoadComplete  is sent twice# and two entries are made the journal # because "journal_addEntry" is trigger two times# ( I assume because browserDocumentLoadComplete is fired twice?)# the first is triggeed outside the message path# and give "bogus" information to a jounal.sqlite record# The second one is inside the message path.    journal_AddEntry fires twice# and we get a correct record. Both records the appear the journal on Android# this does not happen on desktop and iOSon browserDocumentLoadBegin pURL   ntinfo ("begin load url , body is visible: "& (the vis of widget "body"))   set layer of widget "loader" to "top"   set htmltext of widget "Loader" to fld "loaderHTML"   show widget "loader"   show group "footer"   ntInfo ( (the lockscreen) & "; show the loader " &  pURL)end browserDocumentLoadBeginon browserDocumentLoadComplete pURL     ntinfo ("download flag: " & sHackDownloadCompleteFlag)   if pURL is not empty then      dispatch "hideloader" to me    end if   show widget "Body"   show group "footer"   put "true" into sLoadSuccessFlag   put pURL into sBrowserURL   browser_SetLastURL pURL   put short name of the target into tBrowser      ntInfo ( (the lockscreen) & "; show the target: " & tBrowser &"; " &  pURL)   end browserDocumentLoadCompletecommand hideLoader   hide widget "loader"end hideLoaderon journal_AddEntry   try      parseTheHTML (the htmlText of widget "body"),"Title"   end try   put browser_GetLastURL() into pData["weburl"]    put browser_GetLastPageTitle() into tTitle   Journal_RecordEntry "view_SivaSivaBrowser",tTitle,pData   end journal_AddEntryon journalResume  pDataA, pEntryA   put the long id of widget "Body" of cd "SivaSivaBrowser"  into tBrowser    set the URL of tBrowser to pDataA["weburl"]end journalResumecommand share_Items    put browser_GetLastURL() into tWebPage   put tWebPage into sShareItemsA["url"]     if tWebPage contains "Youtube" then # we have a video      put "Watch this Video!" into sShareItemsA["subject"]      put "Shared from the new SivaSiva App." into sShareItemsA["text"]   else      put "Check out this web page!" into sShareItemsA["subject"]      put "Shared from the SivaSiva App" into sShareItemsA["text"]   end if   return sShareItemsAend share_Itemscommand resetUI   set the url of  widget "body" of cd "SivaSivaBrowser" to empty   hide widget "body" of cd "SivaSivaBrowser"   show widget "loader" of cd "SivaSivaBrowser"end resetUI
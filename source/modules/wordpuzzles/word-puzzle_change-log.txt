Word Puzzles Change Log

10/3/16 - Jacque
CHECK HOME PROXIMITY HANDLER
	Handlers are written to allow any duplicate word to occupy any dupliate position. They work, but are currently disabled because the cropping of the images isn't consistent enough. If a word is (correctly) placed in a position different from the original crop, it doesn't quite align correctly. We shouldl discuss if you want to fix the cropping or leave the stricter word placement as-is. The hanlders are marked and only need to be uncommented. There are two handlers in the card script and two in the behavior.
	
DROPPED PIECE LAYERING
	When a piece is dropped into a correct position, it is now layered under the other "floating" pieces. This avoids the situation where a dropped piece covers an unplaced one, and you can't grab the unplaced one because it isn't showing.


2016-09-25 --Brahmanathaswami

REDUCED LEVELS TO 4 ONLY
	- Over 200 chars is just too hard. This should be fun. Even level 4 is a challenge.
	- now that we are pulling from the database, we have several thousand quotes in all four lower length categories... I removed levels 5 and 6 and this way the tiles are bigger also.

UPDATED FETCHQUOTE TO USE THE DATABASE... 

super easy!

		put  JnanamDB() into tConnectionID   
		   put the uFetchSQL of this stack into tSQL
		   put line sCurLevel of the uLevelRanges of this cd into tCurRange
		   replace ":1" with  (trueword 1 of tCurRange) in tSQL
		   replace ":2" with  (trueword 2 of tCurRange) in tSQL
		   dbSetSQL tSQL
		   put dbGet("quote", tConnectionID) into aSelectedQuotes
		   put random (the number of lines of the keys of aSelectedQuotes) into tNo
		   put textDecode ( aSelectedQuotes[tNo]["content"], UTF8)  into sQuote
		   put textDecode ( aSelectedQuotes[tNo]["subject"], UTF8)  into fld "wordPuzzleSubject"
		   show fld "wordPuzzleSubject"
		   #hack to deal with endline bug
		   replace "\n" with space in sQuote
		See card script for more comments
		
CHECK HOME PROXIMITY HANDLER CHANGES

	Revert to the original abs home proximity method because the cWord method was breaking the "sensing" of duplicate words after the first one was place. If you have "the" four times in the quote, all those tiles have their "cWord" as "the" and the look up for the formatted rect on a repeat loop will only find the rect the first match, all subsequent matches "die" and never return "true". We would need a better algorithm if you want *any* word "the* to return true in anyh position. For now I hard-wired it to the uWordTileLocation of each tile which is fool proof and uses less CPU cycles to test proximity.
	
IMPLEMENTED READ IN CONTEXT:
	- Now that we have metadata from the dbase we can pass the URL to a custom prop for the widget "Context" and fire the URL after on mouseup.
	- It was a no-brainer to add the browser widget right to this card. With all the difficulties we have been having hoping a new card with the browser widget, there seem to be no reason not to do it "in situ"  Just because we *can* externalize a browser stack/library for viewing any media, does not mean that doing that is the best decision. Especailly for viewing books, we will want to have the rect fit into different contexts... this was so easy to implement too me about 15 minutes to pass the URL, show and hide the browser widget.
	
ADD SUBJECT FIELD
	- Most quotes have a subject field. I pass that to a small field at the top of the card, it goes away in 2 seconds.
	
CHANGED COLORS FOR TILES:
	-- Tiles all have a border now on creation
	-- Tiles will  now glow when checkHomeProximity returns true
	-- after tiles are place, the border is turned off so the user knows it is in place.
	
TO DO:
	-I think a better algorithm can be worked out to spread the tiles around the screen with less over lap. Some more linear method that lays them out randomly left to right and then drop to another line... so that the user is not having to spend so much time sorting out tiles, would make the game a little easier to get started... Right now the user has to fuss around a lot just to see what her words are. so, instead of getting into the fun part, there is this burdensome sorting out phase that I think we should removed from the UX...
	